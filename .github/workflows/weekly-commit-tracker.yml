name: Weekly Commit Tracker

on:
  schedule:
    - cron: '0 0 * * *'   # 매일 UTC 00:00 (한국시간 09:00)
    - cron: '0 12 * * *'  # 매일 UTC 12:00 (한국시간 21:00)
  workflow_dispatch:

jobs:
  track-commits:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check weekly commits
        id: check_commits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          USERNAME="${{ github.repository_owner }}"
          NOW=$(TZ='Asia/Seoul' date '+%Y-%m-%d %H:%M:%S')
          CURRENT_WEEKDAY=$(TZ='Asia/Seoul' date '+%u')
          
          echo "Current time (KST): $NOW"
          echo "Checking commits for user: $USERNAME"
          
          EXCLUDED_REPOS="weekly-commit-challenge"
          
          if [ "$CURRENT_WEEKDAY" -eq 1 ]; then
            WEEK_START=$(TZ='Asia/Seoul' date -d '7 days ago' '+%Y-%m-%d')
            WEEK_END=$(TZ='Asia/Seoul' date -d '1 day ago' '+%Y-%m-%d')
            PERIOD_TYPE="지난주"
          else
            DAYS_SINCE_MONDAY=$((CURRENT_WEEKDAY - 1))
            WEEK_START=$(TZ='Asia/Seoul' date -d "$DAYS_SINCE_MONDAY days ago" '+%Y-%m-%d')
            WEEK_END=$(TZ='Asia/Seoul' date -d '1 day ago' '+%Y-%m-%d')
            PERIOD_TYPE="이번주"
          fi
          
          echo "Week start: $WEEK_START, Week end: $WEEK_END"
          
          # 한국 시간을 UTC로 변환 (KST - 9시간)
          SINCE_DATE_UTC=$(TZ='UTC' date -d "$WEEK_START 00:00:00 KST" -Iseconds)
          UNTIL_DATE_UTC=$(TZ='UTC' date -d "$WEEK_END 23:59:59 KST" -Iseconds)
          
          echo "KST Week start: $WEEK_START 00:00:00"
          echo "KST Week end: $WEEK_END 23:59:59"
          echo "UTC Since date: $SINCE_DATE_UTC"
          echo "UTC Until date: $UNTIL_DATE_UTC"
          
          # GraphQL 쿼리 생성 (유저 정보와 커밋 정보 함께 조회)
          echo '{"query":"query($username: String!, $from: DateTime!, $to: DateTime!) { user(login: $username) { avatarUrl contributionsCollection(from: $from, to: $to) { totalCommitContributions commitContributionsByRepository { repository { name owner { login } } contributions { totalCount } } } } }","variables":{"username":"'$USERNAME'","from":"'$SINCE_DATE_UTC'","to":"'$UNTIL_DATE_UTC'"}}' > /tmp/query.json
          
          # GraphQL API 호출
          GRAPHQL_RESPONSE=$(curl -s -X POST \
            -H "Authorization: bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d @/tmp/query.json \
            "https://api.github.com/graphql")
          
          echo "GraphQL Response: $GRAPHQL_RESPONSE"
          
          # 유저 아바타 URL 추출
          AVATAR_URL=$(echo "$GRAPHQL_RESPONSE" | jq -r '.data.user.avatarUrl // ""')
          
          # 커밋 수 계산
          COMMIT_COUNT=$(echo "$GRAPHQL_RESPONSE" | jq --arg excluded "$EXCLUDED_REPOS" '
            .data.user.contributionsCollection.commitContributionsByRepository
            | map(select(.repository.name as $repo_name | ($excluded | split(",") | index($repo_name) | not)))
            | map(.contributions.totalCount)
            | add // 0
          ')
          
          if [ -z "$COMMIT_COUNT" ] || [ "$COMMIT_COUNT" = "null" ]; then
            COMMIT_COUNT=0
          fi
          
          echo "Commit count: $COMMIT_COUNT"
          echo "Avatar URL: $AVATAR_URL"
          
          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT
          echo "period_start=$WEEK_START" >> $GITHUB_OUTPUT
          echo "period_end=$WEEK_END" >> $GITHUB_OUTPUT
          echo "period_type=$PERIOD_TYPE" >> $GITHUB_OUTPUT
          echo "avatar_url=$AVATAR_URL" >> $GITHUB_OUTPUT
          
          if [ $COMMIT_COUNT -gt 0 ]; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi

      - name: Calculate week number
        id: week_number
        run: |
          YEAR=$(TZ='Asia/Seoul' date '+%Y')
          WEEK_NUMBER=$(node -e "
            // 한국 시간 기준으로 주차 계산
            const now = new Date();
            const kstOffset = 9 * 60 * 60 * 1000; // 9시간을 밀리초로
            const kstNow = new Date(now.getTime() + kstOffset);
            
            const target = new Date(kstNow.valueOf());
            const dayNr = (target.getDay() + 6) % 7; // 월요일을 0으로
            target.setDate(target.getDate() - dayNr + 3); // 목요일로 이동
            const jan4 = new Date(target.getFullYear(), 0, 4); // 1월 4일
            const dayDiff = (target - jan4) / 86400000;
            console.log(Math.ceil(dayDiff / 7));
          ")
          
          echo "week_number=$WEEK_NUMBER" >> $GITHUB_OUTPUT
          echo "Year: $YEAR, Week: $WEEK_NUMBER (KST 기준)"

      - name: Update record.md
        run: |
          COMMIT_COUNT="${{ steps.check_commits.outputs.commit_count }}"
          SUCCESS="${{ steps.check_commits.outputs.success }}"
          WEEK_NUM="${{ steps.week_number.outputs.week_number }}"
          PERIOD_START="${{ steps.check_commits.outputs.period_start }}"
          PERIOD_END="${{ steps.check_commits.outputs.period_end }}"
          YEAR=$(TZ='Asia/Seoul' date '+%Y')
          
          # 주차 기간 계산
          START_DATE=$(TZ='Asia/Seoul' date -d "$PERIOD_START" '+%Y-%m-%d')
          START_WEEKDAY=$(TZ='Asia/Seoul' date -d "$START_DATE" '+%u')
          DAYS_TO_SUBTRACT=$((START_WEEKDAY - 1))
          MONDAY=$(TZ='Asia/Seoul' date -d "$START_DATE - $DAYS_TO_SUBTRACT days" '+%m/%d')
          SUNDAY=$(TZ='Asia/Seoul' date -d "$START_DATE - $DAYS_TO_SUBTRACT days + 6 days" '+%m/%d')
          WEEK_PERIOD="$MONDAY ~ $SUNDAY"
          
          if [ "$SUCCESS" = "true" ]; then
            STATUS_EMOJI="✅ 성공"
          else
            STATUS_EMOJI="🔄 진행중 ($COMMIT_COUNT개)"
          fi
          
          # 아바타 URL 가져오기
          AVATAR_URL="${{ steps.check_commits.outputs.avatar_url }}"
          
          # JSON 데이터 생성
          echo '{"period":"'$WEEK_PERIOD'","year":'$YEAR',"weekNumber":'$WEEK_NUM',"commitCount":'$COMMIT_COUNT',"success":'$SUCCESS',"status":"'$STATUS_EMOJI'","lastUpdated":"'$(TZ='Asia/Seoul' date -Iseconds)'","username":"${{ github.repository_owner }}","avatarUrl":"'$AVATAR_URL'"}' > /tmp/record.json
          RECORD_JSON=$(cat /tmp/record.json)
          
          # record.md 생성
          {
            echo "# ${{ github.repository_owner }} - Weekly Commit Challenge Record"
            echo ""
            echo "## 📊 JSON Data"
            echo ""
            echo '```json'
            echo "$RECORD_JSON"
            echo '```'
            echo ""
            echo "## 📊 기록 테이블"
            echo ""
            echo "| 기간 | 주차 | 커밋 수 | 성공 여부 |"
            echo "| --- | --- | --- | --- |"
            echo "| $WEEK_PERIOD | ${YEAR}년 ${WEEK_NUM}주차 | $COMMIT_COUNT | $STATUS_EMOJI |"
          } > record.md

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add record.md
          
          if ! git diff --staged --quiet; then
            CURRENT_TIME=$(TZ='Asia/Seoul' date '+%m/%d %H:%M')
            git commit -m "📊 ${{ steps.week_number.outputs.week_number }}주차 위클리 커밋 챌린지 기록 업데이트 ($CURRENT_TIME)"
            git push
            echo "✅ record.md 업데이트 완료"
          else
            echo "ℹ️ 변경사항이 없어 커밋하지 않습니다."
          fi
